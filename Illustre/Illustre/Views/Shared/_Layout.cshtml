 @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Illustre</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Illustre.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow" id="illustre-navbar">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Account" asp-action="Index">Illustre</a>
                <div class="d-flex">
                    <a class="illustre-grayscale illustre-navbar-text" href="mailto:superadmin@example.com">Contact Support</a>
                    @{
                        if (HttpContextAccessor is not null &&
                            HttpContextAccessor.HttpContext is not null &&
                            HttpContextAccessor.HttpContext.Request.Cookies.TryGetValue(ConstantsHelper.UsernameCookie, out var usernameCookie) &&
                            HttpContextAccessor.HttpContext.Request.Cookies.TryGetValue(ConstantsHelper.RoleCookie, out var roleCookie))
                        {
                            <div class="nav-item dropdown illustre-grayscale">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span>@usernameCookie</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownMenuLink">
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="Account">Account</a></li>
                                    @{
                                        if (roleCookie == "User")
                                            {
                                                <li><a class="dropdown-item" href="#">Likes</a></li>
                                                <li><a class="dropdown-item" href="#">Dislikes</a></li>
                                                <li><a class="dropdown-item" href="#">Tags</a></li>
                                            }
                                    }
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="LogOut">Log Out</a></li>
                                </ul>
                            </div>
                        }
                    }
                </div>
            </div>
        </nav>
        @{
            if (HttpContextAccessor is not null &&
                HttpContextAccessor.HttpContext is not null &&
               !HttpContextAccessor.HttpContext.Request.Cookies.TryGetValue(ConstantsHelper.AcceptCookie, out var acceptCookie))
            {
                <div class="illustre-form">
                    <div class="row g-1">
                        <div class="col-12">
                            <div class="alert alert-light alert-dismissible fade show" role="alert">
                                <span>This site uses cookies. By continuing to browse you are agreeing to our use of cookies.</span>
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                </div>
                var options = new CookieOptions()
                {
                    Expires = DateTime.UtcNow.AddDays(1),
                    Domain = HttpContextAccessor.HttpContext.Request.Host.Host,
                };
                HttpContextAccessor.HttpContext.Response.Cookies.Append(ConstantsHelper.AcceptCookie, "accept", options);
            }
        }
    </header>
    <div class="container">
        <main role="main">
            @RenderBody()
        </main>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
